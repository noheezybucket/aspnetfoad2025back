@model PagedList.IPagedList<AspNetMvcFoad2025.Models.Colis>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Gestion des Colis";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">

    <h1 class="h3 mb-4 text-gray-800">Liste des Colis</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <form class="form-inline" method="get" action="@Url.Action("Index", "Colis")">
                <div class="input-group mr-2">
                    @Html.TextBox("Libelle", ViewBag.Libelle as string, new { @class = "form-control", placeholder = "Rechercher un libellé..." })
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <a href="@Url.Action("Create", "Colis")" class="btn btn-success ml-auto">
                    <i class="fas fa-plus"></i> Nouveau colis
                </a>
                <a href="@Url.Action("Imprimer", "Colis")" class="btn btn-primary">Imprimer PDF</a>

            </form>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" width="100%" cellspacing="0">
                    <thead class="thead-light">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CodeColis)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().libelleColis)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().DescriptionColis)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PoidsColis)</th>
                            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TypeColis)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.CodeColis)</td>
                                <td>@Html.DisplayFor(modelItem => item.libelleColis)</td>
                                <td>@Html.DisplayFor(modelItem => item.DescriptionColis)</td>
                                <td>@Html.DisplayFor(modelItem => item.PoidsColis)</td>
                                <td>@Html.DisplayFor(modelItem => item.TypeColis)</td>
                                <td>
                                    <a class="btn btn-sm btn-info" href="@Url.Action("Edit", new { id = item.IdColis })">
                                        <i class="fas fa-edit"></i> Modifier
                                    </a>
                                    <a class="btn btn-sm btn-secondary" href="@Url.Action("Details", new { id = item.IdColis })">
                                        <i class="fas fa-eye"></i> Détails
                                    </a>
                                    <a class="btn btn-sm btn-danger" href="@Url.Action("Delete", new { id = item.IdColis })">
                                        <i class="fas fa-trash-alt"></i> Supprimer
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between align-items-center">
                <span>
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
                </span>
                <div>
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, Libelle = ViewBag.Libelle }),
                        new PagedListRenderOptions
                        {
                            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                            DisplayLinkToLastPage = PagedListDisplayMode.Always,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                            DisplayLinkToNextPage = PagedListDisplayMode.Always,
                            Display = PagedListDisplayMode.IfNeeded,
                            UlElementClasses = new[] { "pagination" },
                            LiElementClasses = new[] { "page-item" },
                            //PageClasses = new[] { "page-link" }
                        })
                </div>
            </div>
        </div>
    </div>
</div>
